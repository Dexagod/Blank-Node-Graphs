/// <reference types="node" />
import { Quad } from '@rdfjs/types';
import { webcrypto } from 'crypto';
export declare const keyParams: {
    name: string;
    namedCurve: string;
};
export declare const signParams: {
    name: string;
    hash: string;
};
export declare function hashDataGraph(input: Iterable<Quad>): Promise<Uint8Array>;
export declare function signQuads(content: Quad[], privateKey: webcrypto.CryptoKey): Promise<string>;
export declare function verifyQuads(input: Quad[], signature: string, publicKey: webcrypto.CryptoKey): Promise<boolean>;
export declare function generateKeyPair(): Promise<webcrypto.CryptoKeyPair>;
export declare function importPrivateKey(key: webcrypto.JsonWebKey): Promise<webcrypto.CryptoKey>;
export declare function importKey(key: string): Promise<webcrypto.CryptoKey>;
export declare function exportKey(key: CryptoKey): Promise<string>;
export declare function exportPrivateKey(key: CryptoKey): Promise<webcrypto.JsonWebKey>;
