{"version":3,"file":"Runner.js","sourceRoot":"","sources":["Runner.ts"],"names":[],"mappings":";;;AAEA,2CAA4C;AAE5C,0BAAmC;AAEnC,4BAA4B;AAC5B,iCAAiC;AAEjC,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAEnC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;IACrB,OAAO,CAAC,KAAK,CAAC;;;;;CAKf,CAAC,CAAC;IACD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB;AAED,mBAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;KACrD,IAAI,CAAC,CAAC,GAA+B,EAAE,EAAE;IACxC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC1B,IAAI,KAAK,GAAG,IAAI,CAAC;IACjB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAc,EAAE,EAAE;QACrC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAC7B;aAAM;YACL,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC5B;QACD,KAAK,GAAG,KAAK,CAAC;QACd,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAA,6BAAgB,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC;KACD,KAAK,CAAC,CAAC,KAAY,EAAE,EAAE;IACtB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACrB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC","sourcesContent":["#!/usr/bin/env node\nimport {IActorDereferenceRdfOutput} from \"@comunica/bus-dereference-rdf\";\nimport {quadToStringQuad} from \"rdf-string\";\nimport * as RDF from '@rdfjs/types';\nimport {rdfDereferencer} from \"..\";\n\n// tslint:disable:no-console\n// tslint:disable:no-var-requires\n\nconst args = process.argv.slice(2);\n\nif (args.length !== 1) {\n  console.error(`rdf-dereference dereferences an RDF stream\n\nUsage:\n  rdf-dereference some-url\n  rdf-dereference http://dbpedia.org/page/12_Monkeys\n`);\n  process.exit(1);\n}\n\nrdfDereferencer.dereference(args[0], {localFiles: true})\n  .then((out: IActorDereferenceRdfOutput) => {\n    process.stdout.write('[');\n    let first = true;\n    out.data.on('data', (quad: RDF.Quad) => {\n      if (!first) {\n        process.stdout.write(',\\n');\n      } else {\n        process.stdout.write('\\n');\n      }\n      first = false;\n      process.stdout.write(JSON.stringify(quadToStringQuad(quad)));\n    });\n    out.data.on('end', () => console.log('\\n]'));\n  })\n  .catch((error: Error) => {\n    console.error(error);\n    process.exit(1);\n  });\n"]}