"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RdfDereferencerBase = void 0;
const core_1 = require("@comunica/core");
const context_entries_1 = require("@comunica/context-entries");
/**
 * An RdfDerefencer can dereference URLs to RDF streams, using any RDF serialization.
 */
class RdfDereferencerBase {
    constructor(args) {
        this.mediatorDereferenceRdf = args.mediatorDereferenceRdf;
    }
    /**
     * Dereference the given URL to an RDF stream.
     * @param {string} url An HTTP(S) HTTPS URL.
     * @param {IDereferenceOptions} options
     * @return {IActorRdfDereferenceOutput} The dereference output.
     */
    dereference(url, options = {}) {
        const context = new core_1.ActionContext(options);
        // Delegate dereferencing to the mediator
        return this.mediatorDereferenceRdf.mediate({
            context: typeof options.fetch === 'function' ? context.setDefault(context_entries_1.KeysHttp.fetch, options.fetch) : context,
            headers: new Headers(options.headers),
            method: options.method,
            url,
        });
    }
}
exports.RdfDereferencerBase = RdfDereferencerBase;
//# sourceMappingURL=RdfDereferencerBase.js.map